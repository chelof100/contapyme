-- ========================================
-- LIMPIEZA FINAL: POL√çTICAS REDUNDANTES RESTANTES
-- ========================================
-- Ejecutar en Supabase SQL Editor

begin;

-- -----------------------------------------------------------
-- PROBLEMA IDENTIFICADO:
-- Aunque se aplic√≥ la optimizaci√≥n, persisten pol√≠ticas redundantes:
-- 1. SELECT: 3 pol√≠ticas que hacen lo mismo
-- 2. UPDATE: 2 pol√≠ticas que se solapan
-- 3. Solo INSERT y DELETE est√°n correctamente unificados
-- -----------------------------------------------------------

-- -----------------------------------------------------------
-- 1) ELIMINAR POL√çTICAS SELECT REDUNDANTES EN PROFILES
-- -----------------------------------------------------------

-- Eliminar pol√≠tica duplicada
DROP POLICY IF EXISTS "Users see own profile" ON profiles;

-- Eliminar pol√≠tica redundante (ya tenemos "Allow users to see own profile")
DROP POLICY IF EXISTS "Admins see all profiles" ON profiles;

-- -----------------------------------------------------------
-- 2) ELIMINAR POL√çTICAS UPDATE REDUNDANTES EN PROFILES
-- -----------------------------------------------------------

-- Eliminar pol√≠tica que se solapa (ya tenemos "profiles_update_by_role" que cubre ambos casos)
DROP POLICY IF EXISTS "Allow users to update own profile" ON profiles;

-- -----------------------------------------------------------
-- 3) VERIFICAR ESTRUCTURA FINAL LIMPIA
-- -----------------------------------------------------------

-- Verificar pol√≠ticas finales de profiles
SELECT 
    'PROFILES' as tabla,
    policyname,
    cmd,
    CASE 
        WHEN cmd = 'SELECT' THEN 'üîç LECTURA'
        WHEN cmd = 'INSERT' THEN 'üìù INSERCI√ìN'
        WHEN cmd = 'UPDATE' THEN '‚úèÔ∏è ACTUALIZACI√ìN'
        WHEN cmd = 'DELETE' THEN 'üóëÔ∏è ELIMINACI√ìN'
        ELSE '‚ùì ' || cmd
    END as operacion,
    CASE 
        WHEN cmd = 'INSERT' AND policyname = 'profiles_insert_correct' THEN '‚úÖ UNIFICADA'
        WHEN cmd = 'SELECT' AND policyname = 'Allow users to see own profile' THEN '‚úÖ UNIFICADA'
        WHEN cmd = 'UPDATE' AND policyname = 'profiles_update_by_role' THEN '‚úÖ UNIFICADA'
        WHEN cmd = 'DELETE' AND policyname = 'profiles_delete_admin_only' THEN '‚úÖ UNIFICADA'
        ELSE '‚ùå REDUNDANTE'
    END as estado
FROM pg_policies 
WHERE tablename = 'profiles'
ORDER BY cmd, policyname;

-- -----------------------------------------------------------
-- 4) RESUMEN FINAL DE OPTIMIZACI√ìN
-- -----------------------------------------------------------
-- Contar pol√≠ticas finales
SELECT 
    'RESUMEN FINAL' as tipo,
    COUNT(*) as total_policies,
    COUNT(CASE WHEN tablename = 'profiles' THEN 1 END) as profiles_policies,
    COUNT(CASE WHEN tablename = 'facturas' THEN 1 END) as facturas_policies
FROM pg_policies 
WHERE schemaname = 'public'
  AND tablename IN ('profiles', 'facturas');

commit;

-- ========================================
-- RESULTADO ESPERADO:
-- ‚úÖ 4 pol√≠ticas en profiles (1 por operaci√≥n)
-- ‚úÖ 7 pol√≠ticas en facturas (ya optimizadas)
-- ‚úÖ Total: 11 pol√≠ticas (no 14)
-- ‚úÖ Sistema completamente limpio y eficiente
-- ========================================

-- ========================================
-- VERIFICACI√ìN POST-LIMPIEZA:
-- Ejecutar este comando para ver el estado final:
-- SELECT tablename, policyname, cmd FROM pg_policies 
-- WHERE schemaname = 'public' AND tablename IN ('profiles', 'facturas')
-- ORDER BY tablename, cmd;
-- ========================================
