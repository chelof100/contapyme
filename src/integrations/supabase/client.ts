// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';
import { mockSupabase } from '@/utils/mockSupabase';

// Obtener configuración desde variables de entorno o configuración pública
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || (window as any).ENV_CONFIG?.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || (window as any).ENV_CONFIG?.VITE_SUPABASE_ANON_KEY;

// Detectar si estamos en GitHub Pages con URLs de ejemplo
const isGitHubPages = typeof window !== 'undefined' && window.location.hostname === 'chelof100.github.io';
const isExampleConfig = SUPABASE_URL?.includes('example.supabase.co');

// Crear el cliente de Supabase
let supabaseClient: any;

if (isGitHubPages && isExampleConfig) {
  console.log('Using mock Supabase for GitHub Pages demo');
  supabaseClient = mockSupabase;
} else {
  // Validar que las credenciales estén disponibles
  if (!SUPABASE_URL) {
    throw new Error('VITE_SUPABASE_URL is required. Please configure it in your environment variables or public/config.js');
  }

  if (!SUPABASE_PUBLISHABLE_KEY) {
    throw new Error('VITE_SUPABASE_ANON_KEY is required. Please configure it in your environment variables or public/config.js');
  }

  // Import the supabase client like this:
  // import { supabase } from "@/integrations/supabase/client";

  supabaseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
    auth: {
      storage: localStorage,
      persistSession: true,
      autoRefreshToken: true,
    }
  });
}

export const supabase = supabaseClient;